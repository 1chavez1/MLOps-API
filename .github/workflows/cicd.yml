name: CI/CD for Dockerized Flask app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-in-project: true
    
    - name: Check if Poetry is installed
      run: poetry --version
      shell: bash
    
    - name: Load cached venv
      uses: actions/cache@v4
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies using Poetry 
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'True'
      run: poetry run  make install
      shell: bash

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v3.8.0
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6.12.0
      with:
        context: .
        file: ./Dockerfile
        push: True
        tags: ${{ secrets.DOCKER_USERNAME }}/inference-api:latest
    
    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest  }}